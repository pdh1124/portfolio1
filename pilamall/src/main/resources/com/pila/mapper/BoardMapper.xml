<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pila.mapper.BoardMapper">
	
	<!-- 검색어 처리 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type=='T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type=='W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	
	<!-- 글 목록 -->
	<select id="getList" resultType="com.pila.domain.BoardVO">
		<![CDATA[
			select * from comm_board where bno > 0
		]]>
	</select>
	
	<!-- 글쓰기 -->
	<insert id="insert">
		insert into comm_board(bno,title,content,writer,notice) values (seq_comm_board.nextval, #{title}, #{content}, #{writer}, #{notice})
	</insert>
	
	<!-- 글번호 받기 -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			select seq_comm_board.nextval from dual
		</selectKey>
		insert into comm_board(bno,title,content,writer, notice) values (#{bno}, #{title}, #{content}, #{writer}, #{notice})
	</insert>
	
	<!-- 글읽기 -->
	<select id="read" resultType="com.pila.domain.BoardVO">
		select * 
		from (select comm_board.*, lead(bno,1) over(order by bno) nextBno, lag(bno,1) over(order by bno) prevBno from comm_board) 
		where bno=#{bno}
	</select>
	
	<!-- 글 삭제 -->
	<delete id="delete">
		delete comm_board where bno=#{bno}
	</delete>

	<!-- 글 수정 -->
	<update id="update">
		update comm_board set title=#{title}, content=#{content}, writer=#{writer}, updateDate=sysdate, notice = #{notice} where bno=#{bno}
	</update>
	
	<!-- 페이징 하기 -->
	<select id="getListWithPaging" resultType="com.pila.domain.BoardVO">
		<![CDATA[
			select bno, title, content, writer, regdate, updatedate, replycnt, views, likeCnt, notice
			from (
				select /*+INDEX_DESC(comm_board pk_comm_board) */ rownum rn, bno, title, content, writer, regdate, updatedate, replycnt, views, likeCnt, notice
				from (select * from comm_board where bno > 0 ORDER BY bno DESC)
				where 
				
		]]>
		
		<include refid="criteria" />
		
		<![CDATA[
					rownum <= #{pageNum} * #{amount}
			)
			where rn > (#{pageNum}-1) * #{amount} 
		]]>
	</select>
	
	<!-- 총 게시물 수 구하는 식(페이징에서 마지막 페이지를 표시하기 위해) -->
	<select id="getTotalCount" resultType="int">
		<![CDATA[
			select count(bno) from comm_board where  
		]]>
		
		<include refid="criteria" />
		
		<![CDATA[
			bno > 0
		]]>
	</select>
	
	<!-- 게시물 마다 댓글 갯수 증가 -->
	<update id="updateReplyCnt">
		update comm_board 
		set replycnt = replycnt + #{amount}
		where bno=#{bno}
	</update>
	
	
	<!-- 조회수 증가 -->
	<update id="updateViews">
		update comm_board 
		set views = views + 1
		where bno = #{bno}
	</update>
	
</mapper>