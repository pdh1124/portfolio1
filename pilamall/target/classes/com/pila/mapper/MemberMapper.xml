<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pila.mapper.MemberMapper">

	<resultMap type="com.pila.domain.AuthVO" id="authMap">
		<result property="userId" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>
	
	<resultMap type="com.pila.domain.MemberVO" id="memberMap">
		<id property="userId" column="userid" />
		<result property="userId" column="userid" />
		<result property="userPass" column="userpass" />
		<result property="userName" column="username" />
		<result property="userEmail" column="useremail" />
		<result property="userPhone" column="userphone" />
		<result property="userAddr1" column="useraddr1" />
		<result property="userAddr2" column="useraddr2" />
		<result property="userAddr3" column="useraddr3" />
		<result property="regDate" column="regdate" />
		<result property="money" column="money" />
		<result property="enabled" column="enabled" />
		<collection property="authList" resultMap="authMap" />
	</resultMap>
	
	<!-- 로그인 -->
	<select id="read" resultMap="memberMap">
		select 
			mem.userId, userPass, userName, userEmail, userPhone, userAddr1, userAddr2, userAddr3, regDate, money, enabled, a.auth
		from 
			tbl_member mem left outer join 
			tbl_member_auth a on mem.userid=a.userid
		where mem.userid=#{userId}   
	</select>
	
	<!-- 회원가입 및 일반권한 주기 -->
	<insert id="signup">
		insert into tbl_member(userId, userPass, userName, userEmail, userPhone, userAddr1, userAddr2, userAddr3)
		values (#{userId}, #{userPass}, #{userName}, #{userEmail}, #{userPhone}, #{userAddr1}, #{userAddr2}, #{userAddr3})
	</insert>
	<insert id="insertAuth">
		insert into tbl_member_auth(userId, auth)
		values (#{userId}, 'ROLE_USER')
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" resultType="int">
		select count(*) 
		from tbl_member
		where userId = #{userId}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="emCheck" resultType="int">
		select count(*)
		from tbl_member
		where userEmail = #{userEmail}
	</select>
	
	<!-- 핸드폰 번호 중복 체크 -->
	<select id="phCheck" resultType="int">
		select count(*)
		from tbl_member
		where userPhone = #{userPhone}
	</select>
	
	<!-- 아이디 찾기를 위한 조건입력 -->
	<select id="findUserIdCheck" resultType="int">
		select count(*) 
		from tbl_member 
		where userName=#{userName} and userEmail=#{userEmail}
	</select>
	
	<!-- 아이디 찾기 결과 -->
	<select id="findUserIdResult" parameterType="String" resultType="String">
		select userId
		from tbl_member 
		where userName=#{userName} and userEmail=#{userEmail}
	</select>
	
	<!-- 비밀번호 찾기를 위해 아이디와 이메일 입력 -->
	<select id="findUserPassCheck" resultType="int">
		select count(*)
		from tbl_member
		where userId=#{userId} and userEmail = #{userEmail}
	</select>
	
	<!-- 비밀번호 찾은 후 변경 -->
	<update id="setUserPass">
		update tbl_member
		set userPass = #{userPass}
		where userId = #{userId} and userEmail = #{userEmail}
	</update>
	
	<!-- 마이페이지 -->
	<select id="getUser" resultType="com.pila.domain.MemberVO">
		select * 
		from tbl_member
		where userId=#{userId}
	</select>
	
	<!-- 패스워드 제외한 변경 -->
	<update id="updateInfoExPass">
		update tbl_member
		set
		userName=#{userName},
		userEmail=#{userEmail},
		userPhone=#{userPhone},
		userAddr1=#{userAddr1},
		userAddr2=#{userAddr2},
		userAddr3=#{userAddr3}
		where userId=#{userId}
	</update>
	
	<!-- 패스워드 까지 변경 -->
	<update id="updateInfo">
		update tbl_member
		set
		userPass=#{userPass},
		userName=#{userName},
		userEmail=#{userEmail},
		userPhone=#{userPhone},
		userAddr1=#{userAddr1},
		userAddr2=#{userAddr2},
		userAddr3=#{userAddr3}
		where userId=#{userId}
	</update>
	
	<!-- 유저삭제 -->
	<delete id="deleteUser">
		delete from tbl_member
		where userId=#{userId}
	</delete>
	
	<!-- 유저의 권한 삭제 -->
	<delete id="deleteAuth">
		delete from tbl_member_auth
		where userId=#{userId}
	</delete>
</mapper>
